
@inject ILogInHttpRepository AuthService
<h3>NewTest</h3>

<div class="card">
    <div class="card-body">       
        <EditForm Model="TestModel" OnValidSubmit="HandleRegistration" >
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Test Name</label>
                <InputText Id="email" class="form-control" @bind-Value="TestModel.TestName" />
            </div>
            <div class="form-group">
                <label for="password">Duration</label>
                <InputNumber Id="duration" class="form-control" @bind-Value="TestModel.Duration" />

            </div>
            <div class="form-group">
                <label for="fastname">Percentage</label>
                <InputNumber Id="fastname" class="form-control" @bind-Value="TestModel.Percentage" />
            </div>
            <button @onclick="CloseNewTest" class="btn btn-primary">Close</button>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
       
    </div>
</div>

@code {
    [Parameter] public EventCallback<SimulateTestModel> OnTestAdded { get; set; }
    [Parameter] public EventCallback<bool> OnCloseTest { get; set; }
    private AddTestModel TestModel = new AddTestModel();
    private async Task HandleRegistration()
    {
        TestModel.EmailId = CurrentUserName;
        await AuthService.Addtest(TestModel);
        SimulateTestModel sm = new SimulateTestModel();
        //sm.TestId = result.TestId;
        sm.TestName = TestModel.TestName;
        sm.emailId = TestModel.EmailId;
        await OnTestAdded.InvokeAsync(sm);
    }

   }


